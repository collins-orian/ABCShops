import axios from "axios";

import {
	PRODUCT_LIST_REQUEST,
	PRODUCT_LIST_SUCCESS,
	PRODUCT_LIST_FAIL,
	PRODUCT_DETAILS_REQUEST,
	PRODUCT_DETAILS_SUCCESS,
	PRODUCT_DETAILS_FAIL,
} from "../constants/ProductConstants";

/**
 * this listProducts function actions that reducers act on
 * to enable state to be passed to a desired component.
 */
export const listProducts = () => async (dispatch) => {
	try {
		/**
		 * this try statement dispatches the request product constant on request
		 * and then fetches data from the api using axios. it then dispatches a
		 * constant of success with the data as payload.
		 */
		dispatch({ type: PRODUCT_LIST_REQUEST });

		const { data } = await axios.get("/api/products/");

		dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });
	} catch (error) {
		/**
		 * this catch statement dispatches the failed constant constant on request
		 * and catches any error that may come up, either a generic error or the
		 * one generated by the system as the payload
		 */

		dispatch({
			type: PRODUCT_LIST_FAIL,
			payload:
				error.response && error.response.data.message
					? error.response.data.message
					: error.message,
		});
	}
};

/**
 * this listProductDetails function actions that reducers act on
 * to enable state to be passed to a desired component.
 */
export const listProductDetails = (id) => async (dispatch) => {
	try {
		dispatch({ type: PRODUCT_DETAILS_REQUEST });

		const { data } = await axios.get(`/api/products/${id}`);

		dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });
	} catch (error) {
		dispatch({
			type: PRODUCT_DETAILS_FAIL,
			payload:
				error.response && error.response.data.message
					? error.response.data.message
					: error.message,
		});
	}
};
